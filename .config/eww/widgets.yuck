


(defwidget main_box []
    (box :orientation "vertical" :spacing 10 :space-evenly "false" :height 400 :width 0
        (box :orientation "horizontal" :spacing 10 :space-evenly "false" :height 0 :width 0
                (profile_box)
                (sys_windows_box)
        )
        (flash_tools)
        (date)
        (box :orientation "h" :spacing 10 :space-evenly false :height 50 :width 50
            (weather)
            (media)
        )
       ; )
    )
)



(defwidget profile_box []
    
        (box :class "profilebox" :orientation "v" :space-evenly false :vexpand "false" :hexpand "false" :width 100 :height 0
            (box :style "background-image: url('/home/branchmanager/.face/branchmanager.jpg')" :height 25 :class "prof_pic" :halign "center")
            (label :class "prof_name" :valign "center" :limit-width 25 :text user)
        )
    
)   
;; This is the monitor for cpu and memory usage
(defwidget sys_windows_box []
    (box 
            :orientation "v"
            :space-evenly true
            :spacing 0
            :class "box1"
            :width 290
            :height 30
            
        (box :class "cpu_bar" :height 10 :width 225 :space-evenly false
            (image :class "svg_monitor_icon" :path "images/icons/cpu_icon.svg" :image-width 20)
				
            (scale  :value CPU_USAGE :marks "no" :min 0 :max 101 :width 250 :flipped false :orientation "h")
        )
        (box :class "mem_bar" :height 10 :width 225 :space-evenly false
            (image :class "svg_monitor_icon" :path "images/icons/memory-solid.svg" :image-width 20)
            (scale  :value MEM_USAGE :marks "no" :min 0 :max 100 :width 250 :flipped false :orientation "h")
        )
        (box :class "temp_bar" :height 10 :width 225 :space-evenly false :spacing 0
            (image :class "svg_monitor_icon" :path "images/icons/temp_icon.svg" :image-width 20)	
            (scale  :value EST_TEMP :marks "no" :min 20 :max 100 :width 250 :flipped false :orientation "h")
        )

    )
)

(defwidget flash_tools []
    (box :height 0 :width 0 :space-evenly false :hexpand false :orientation "h"
        (box :class "box1" :height 75 :width 400 :space-evenly true :spacing 5 :hexpand false :orientation "h"
          
                (button :class "flash_tool" :onclick "./scripts/eww_network_check.sh --toggle_wifi" :height 55 :width 65 :valign "center" :halign "center"
                    (label :text network :class "tool_label")
                )
     
                (button :class "flash_tool" :onclick "./scripts/eww_bt_check.sh --open-blueman" :height 55 :width 65 :valign "center" :halign "center"
                    (label :text "" :class BT_STATUS)
                )
            
                (button :class "flash_tool" :onclick "./scripts/eww_night_time.sh --toggle" :height 55 :width 65 :valign "center" :halign "center"
                    (label :text "" :class NIGHT_MODE )
                )

                (button :class "flash_tool" :onclick "swaync-client -t" :height 55 :width 65 :valign "center" :halign "center"
                    (label :text NOTIFICATION :class "notification_icon")
                )

                (button :class "flash_tool" :onclick "./scripts/start_eww.sh --power" :height 55 :width 65 :valign "center" :halign "center"
                    (label :text "⏻" :class "power_icon")
                )
        )
        
    )

)
(defwidget weather [] 
    (box :class "box1" :width 125 :height 0 :orientation "v" :space-evenly false :spacing 10
        (box :orientation "h" :height 0 :space-evenly true :spacing 20 :valign "center"
            
            ;(label :valign "center" :text weather_icon :class "weather_icon" :hexpand false)
            (label :halign "end" :text temp :class "weather_temp" :valign "end" :hexpand false :yalign "end")
            ;(box :width 50 :height 100 :space-evenly false :orientation "v"
            (label :halign "start" :text weather_icon :class "weather_icon" :hexpand false)
           
           
        )
       
        (label :valign "end" :text desc :class "weather_desc" :wrap true)
 
    )
)
(defwidget media [] 
    (box :class "box1" :width 200 :height 100 :orientation "h" :space-evenly false
        (box :orientation "h"  :style "background-image: url('${cover_art_url}');" :class "spotify-album-art"
            
             (label :text " hello" :class "weather_temp")
            ; (box :width 50 :height 100 :space-evenly false :orientation "v"
            ; (label :text "Warner Robins and the dealeo are here to save the day with other stuff" :class "weather_location" :width 1 :wrap true)
         )
        
         (box :class "box1" :orientation "v" :space-evenly false :width 20
           (eventbox :class "spotify_progress_bar" :vexpand true
                (scale :flipped true
                
                :orientation "v"
                :height 50
                :width 2 ;remove this to take of some side of the supposed bar we created.
                :value 90
                :min 0
                :max 100
                
                
                
                    
                )
           )    
          
            
         
       )
    )
)

(defwidget date []
    ;(box :orientation "horizontal" :spacing 10 :space-evenly "false" :height 0 :width 0
    (box :orientation "h"
        :space-evenly false
        :spacing 10
        
        :width 400
        :height 100
        (box :class "date"
            :orientation "v"
            :space-evenly false
            :width 30
            :hexpand false
            :hexpand false
            (box :class "cal-box"
                :orientation "v"
                :space-evenly false
                :width 250
                :height 180
            
                (calendar :class "cal"
                            :day calendar_day
                            :month calendar_month
                            :year calendar_year
                            :width 150
                            :hexpand false
                            :vexpand false
                )
            )
        )
        (box :orientation "v" :space-evenly true :spacing 10 :width 175
            (box :valign "center" :halign "start"
                (label :text hour  :class "time")
            )
            (box :valign "center" :halign "center"
               
                (label :text minute :class "time")
            )
        )
        
    )

)
(defwidget cal []
    (box :class "cal-box"
         :orientation "v"
         :space-evenly false
         :width 300
         
        (calendar :class "cal"
                    :day calendar_day
                    :month calendar_month
                    :year calendar_year
                    :width 150
                    :hexpand false
                    :vexpand false
        )
    )
  )

(defwidget metric [label value onchange]
    (box :orientation "h" :class "metric" :space-evenly false
      (box :class "label" label)
      (scale :min 0 :max 101 :active {onchange != ""} :value value :onchange onchange)))

(defwidget sys[]
    (box :class "cpu" :orientation "v" :space-evenly false :halign "center" :valign "center"
        (metric :label "﬙" :value 66 :onchange "")))